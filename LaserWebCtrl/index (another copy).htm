<!DOCTYPE html>
<html>
<head>
<meta name="viewport" content="width=device-width, initial-scale=1">

    <script>
      function getAJAXxml()
      {
        var xhr = new XMLHttpRequest();
        var body = "ajax request";
        xhr.onreadystatechange = function()
        {  
          if (this.readyState == 4) {
            if (this.status == 200) {
              if (this.responseXML != null) {
                // XML file received - contains data for all trasmittes
                var count;
                // get transmitters mode
                var num_mode = this.responseXML.getElementsByTagName('mode').length;
                //window.alert('num_mode'); 
                //window.alert(this.responseXML.getElementsByTagName('sensor')[2].childNodes[0].nodeValue);

                // for (count = 0; count < num_mode; count++) {
                //   document.getElementByName("modes")[count].selectedIndex =
                //     this.responseXML.getElementsByTagName('mode')[count].childNodes[0].nodeValue;
                // };
                // get transmitters threshold
                var num_threshold = this.responseXML.getElementsByTagName('threshold').length;
                for (count = 0; count < num_threshold; count++) {
                  document.getElementsByClassName("threshold")[count].value =
                    this.responseXML.getElementsByTagName('threshold')[count].childNodes[0].nodeValue;
                };

                // get transmitters sensor
                // document.getElementById("sensor3").value = 
                //     this.responseXML.getElementsByTagName('sensor')[2].childNodes[0].nodeValue;
                var num_sensor = this.responseXML.getElementsByTagName('sensor').length;
                
                for (count = 0; count < num_sensor; count++) {
                  document.getElementsByClassName("sensor")[count].value =
                    this.responseXML.getElementsByTagName('sensor')[count].childNodes[0].nodeValue;
                };
                // get transmitters battery
                // var num_battery = this.responseXML.getElementsByTagName('battery').length;
                // var battepy_percent = 0;
                // for (count = 0; count < num_battery; count++) {
                //   battepy_percent = this.responseXML.getElementsByTagName('battery')[count].childNodes[0].nodeValue;
                //   battepy_percent = (battepy_percent - 3800)/4;
                //   document.getElementById("battery")[count].value = battepy_percent;   
                // };
                  
                // get transmitters laser state
                // var num_laser_crossed = this.responseXML.getElementsByTagName('laser_crossed').length;
                // var laser_crossed;
                // for (count = 0; count < num_laser_crossed; count++) {
                //   laser_crossed = this.responseXML.getElementsByTagName('laser_crossed')[count].childNodes[0].nodeValue;
                //   if (laser_crossed)
                //   document.getElementsByClassName("form_sensor")[count]
                //       .getElementsByClassName("laser_button").className += " active";
                //   else 
                //   document.getElementsByClassName("form_sensor")[count]
                //       .getElementsByClassName("laser_button").className = 
                //               document.getElementsByClassName("form_sensor")[count]
                //               .getElementsByClassName("laser_button").className.replace( /(?:^|\s)active(?!\S)/g , '' );      
                // };
                // get transmitters button state
                // var num_button_pressed = this.responseXML.getElementsByTagName('button_pressed').length;
                // var button_pressed;
                // for (count = 0; count < num_button_pressed; count++) {
                //   button_pressed = this.responseXML.getElementsByTagName('button_pressed')[count].childNodes[0].nodeValue;
                //   if (button_pressed)
                //   document.getElementsByClassName("form_sensor")[count]
                //       .getElementsByClassName("button_button").className += " active";
                //   else 
                //   document.getElementsByClassName("form_sensor")[count]
                //       .getElementsByClassName("button_button").className = 
                //               document.getElementsByClassName("form_sensor")[count]
                //               .getElementsByClassName("laser_button").className.replace( /(?:^|\s)active(?!\S)/g , '' );      
                // };
              }
            }
          }
        }
        xhr.open('POST', '/getAJAXxml', true);
        xhr.setRequestHeader('Content-Type', 'text-plain');
        xhr.send(body);
        setTimeout('getAJAXxml()', 5000); 
      }

      function myFunction(){
        document.getElementById("sensor3").value = "2";
      }

    </script>

    <style>
        * {box-sizing: border-box;}

        body { 
          margin: 0;
          font-family: Arial, Helvetica, sans-serif;
          background-color: #070303;
        }

        .header {
          overflow: hidden;
          background-color:rgb(49, 51, 49);
          padding: 5px;
          color: #a19f9f;
        }

        .header a {
          float: left;
          text-align: bottom;
          padding-top: 10px;
          text-decoration: none;
          border-radius: 4px;
          height: 35px; 
          font-size: 24px;
        }

        .header h1 {
          padding: px 5px 0px 10px;
          margin-left: 8px;
          text-decoration: none; 
          line-height: 25px;
          border-radius: 4px;
        }

        .header a.logo {
          font-size: 25px;
          font-weight: bold;
        }

        .header a.active {
          background-color: dodgerblue;
          color: white;
        }

        .header-right {
          float: right;
        }
        .header-left {
          float: left;
          margin: 8px;
        }

        .out_box {
              float: left;
              margin: 20px 10px 20px 10px;
              border: 1px solid blue;
              padding: 0 5px 0 5px;
              min-width: 280px;
              max-width: 316px;
              height: 100%;
            }

        @media screen and (max-width: 500px) {
          .header a {
            float: none;
            display: block;
            text-align: left;
          }
          
          .header-right {
            float: none;
          }
        }

        .pagination {
          margin-left: 20px;
        }

        .pagination a {
          text-align: bottom;
          border-radius: 4px;
          height: 35px; 
          font-size: 24px;
          color: black;
          float: center;
          padding: 6px 8px 8px 8px;
          text-decoration: none;
          transition: background-color .3s;
          background-color: #ddd;
          margin: 16px 6px 16px 6px;
        }

        .pagination a.active {
          background-color: green;
          color: white;
        }

        .laser_button {
          margin-left: 6px;
        }

        .laser_button a{
          border-radius: 4px;
          height: 25px; 
          font-size: 18px;
          color: rgb(46, 44, 44);
          padding: 5px 5px 5px 5px;
          text-decoration: none;
          transition: background-color .3s;
          background-color: rgb(131, 123, 123);
          margin: 0px 5px 0px 5px;
        }

        .laser_button a.active {
          background-color: rgb(187, 12, 12);
          color: white;
        }

        table {
          font-family: arial, sans-serif;
          border-collapse: collapse;
          width: 50%;
        }

        input[type=number], select {
          font-size: 18px;
          height: 35px;
          padding: 0px 5px;
          margin-bottom: 10px;
          margin-left: 5px;
          border: 1px solid #ccc;
          border-radius: 4px;
          box-sizing: border-box;
        }

        input[type=submit] {
          height: 35px;
          font-size: 18px;
          background-color: rgb(177, 185, 177);
          color: black;
          padding: 0px 10px 0px 10px;
          margin: 8px 40px 0px 0px;
          border: 1px solid #ccc;
          border-radius: 4px;
          cursor: pointer;
        }

        input[type=button] {
          height: 35px;
          width: 60;
          font-size: 18px;
          background-color: rgb(177, 185, 177);
          color: black;
          padding: 0px 10px 0px 10px;
          margin: 16px 20px 0px 0px;
          border: 1px solid #ccc;
          border-radius: 4px;
          cursor: pointer;
        }

        input[type=button]:hover {
          background-color: #bec9be;
        }

        input[type=submit]:hover {
          background-color: #bec9be;
        }

        input[type=text]{
          float: right;
          width: 50%;
          height: 25px;
          padding: 12px 5px;
          margin: 5px 0px 5px 0px;
          font-size: 18px;
        }

        select{
          float: right;
          width: 50%;
          height: 30px;
          padding: 2px 5px;
          margin: 0px 0px 5px 0px;
          font-size: 18px;
          cursor: pointer;
        }

        label {
          float: left;
          height: 25px;
          padding: 12px 5px;
          margin: 8px 0px;
          font-size: 18px;
          color: cornflowerblue;
        }
        .osc {
          margin: 15px 0px 5px 0px;
          width: 100%;
          color: cornflowerblue;
        }

        .osc h2{
          margin: 85px 0px 10px 0px;
          width: 100%;
        }

        .osc input[type=text]{
          width: 100%;
          height: 25px;
          padding: 12px 5px;
          margin: 8px 0px 8px 0px;
          font-size: 18px;
        }

        h2{
          color: cornflowerblue;
        }

        progress {
          height: 25px;
          float: right;
          width: 50%;
          margin: 15px 0px 15px 0px;
        }

    </style>
</head>

<body onload="getAJAXxml()">
<div class="header">
<h1>Radio Button Server</h1>
<div class="header-left">
           <form action="" font-size: 28px; novalidate>
                    <a>RF Channel:</a>
                    <input type="number" id="channel_num" name="channel_num" min="1" max="100" value="5">
                    <input type="submit" formmethod="post">
            </form>
</div>

<div class="pagination">
  <a id="id1" class="active">1</a>
  <a id="id2" class="">2</a>
  <a id="id3">3</a>
  <a id="id4">4</a>
</div>


  <div class="header-right">
    <input type="button" id="calibration" name="calibration" value="Calibration" onclick="myFunction()">
    <input type="button" id="run" name="run" value="Run">
    <input type="button" id="config" name="config" value="Config">
  </div>
  
</div>

<div class="out_box">
  
    <h2><span class="transmitter_name">Transmitter 1</span></h2>

    <div class="laser_button">
        <a id="laser_button" class="active">Laser Crossed</a>
        <a id="button_button" class="">Button Pressed</a>
    </div><br />

    <label for="battery">Battery level: </label>
    <progress id="battery" name="battery" value="50" max="100" ></progress><br />

      <label for="modes">Mode: </label>
      <select name="modes" onchange="">
        <option selected>Calibration</option>
        <option >Run</option>
        <option>Config</option>
      </select><br />

    <label for="sensor1">Sensor value: </label>
    <input type="text" id="sensor1" class="sensor" value="0" disabled><br />

    <label for="threshold">Threshold: </label>
    <input type="text" id="threshold" class="threshold" value="0"><br />
    
    
    <div class="osc"> <br />
        <h2>OSC settings:</h2>
        <form class="osc" name="OSC">
            OSC IP:<br>
            <input type="text" name="osc_ip" value="" required pattern="^([0-9]{1,3}\.){3}[0-9]{1,3}$">
            <br>
            OSC Command:<br>
            <input type="text" name="osc_command" value="">
            <br><br>
            <input type="submit" value="Submit" style="float:initial">
        </form>
    </div>


  
</div>

<div class="out_box">
      <h2><span class="transmitter_name">Transmitter 2</span></h2>
      <div class="laser_button">
          <a id="laser_button" class="">Laser Crossed</a>
          <a id="button_button" class="">Button Pressed</a>
      </div><br />
  
      <label for="battery">Battery level: </label>
      <progress id="battery" name="battery" value="0" max="100" ></progress><br />
  
        <label for="modes">Mode: </label>
        <select name="modes" onchange="">
          <option selected>Calibration</option>
          <option>Run</option>
          <option>Config</option>
        </select><br />
  
      <label for="sensor2">Sensor value: </label>
      <input type="text" id="sensor2" class="sensor" value="0" disabled><br />
  
      <label for="threshold">Threshold: </label>
      <input type="text" id="threshold" class="threshold" value="0"><br />
      
      
      <div class="osc"> <br />
          <h2>OSC settings:</h2>
          <form class="osc" name="OSC">
              OSC IP:<br>
              <input type="text" name="osc_ip" value="" required pattern="^([0-9]{1,3}\.){3}[0-9]{1,3}$">
              <br>
              OSC Command:<br>
              <input type="text" name="osc_command" value="">
              <br><br>
              <input type="submit" value="Submit" style="float:initial">
          </form>
      </div>  
  
</div>

<div class="out_box">
      <h2><span class="transmitter_name">Transmitter 3</span></h2>
      <div class="laser_button">
          <a id="laser_button" class="">Laser Crossed</a>
          <a id="button_button" class="">Button Pressed</a>
      </div><br />
  
      <label for="battery">Battery level: </label>
      <progress id="battery" name="battery" value="0" max="100" ></progress><br />
  
        <label for="modes">Mode: </label>
        <select name="modes" onchange="">
          <option selected>Calibration</option>
          <option>Run</option>
          <option>Config</option>
        </select><br />
  
      <label for="sensor3">Sensor value: </label>
      <input type="text" id="sensor3" class="sensor" value="0" disabled><br />
  
      <label for="threshold">Threshold: </label>
      <input type="text" id="threshold" class="threshold" value="0"><br />
      
      
      <div class="osc"> <br />
          <h2>OSC settings:</h2>
          <form class="osc" name="OSC">
              OSC IP:<br>
              <input type="text" name="osc_ip" value="" required pattern="^([0-9]{1,3}\.){3}[0-9]{1,3}$">
              <br>
              OSC Command:<br>
              <input type="text" name="osc_command" value="">
              <br><br>
              <input type="submit" value="Submit" style="float:initial">
          </form>
      </div>

</div>

<div class="out_box">
      <h2><span class="transmitter_name">Transmitter 4</span></h2>
      <div class="laser_button">
          <a id="laser_button" class="">Laser Crossed</a>
          <a id="button_button" class="">Button Pressed</a>
      </div><br />
  
      <label for="battery">Battery level: </label>
      <progress id="battery" name="battery" value="0" max="100" ></progress><br />
  
        <label for="modes">Mode: </label>
        <select name="modes" onchange="">
          <option selected>Calibration</option>
          <option>Run</option>
          <option>Config</option>
        </select><br />
  
      <label for="sensor4">Sensor value: </label>
      <input type="text" id="sensor4" class="sensor" value="0" disabled><br />
  
      <label for="threshold">Threshold: </label>
      <input type="text" id="threshold" class="threshold" value="0"><br />
      
      
      <div class="osc"> <br />
          <h2>OSC settings:</h2>
          <form class="osc" name="OSC">
              OSC IP:<br>
              <input type="text" name="osc_ip" value="" required pattern="^([0-9]{1,3}\.){3}[0-9]{1,3}$">
              <br>
              OSC Command:<br>
              <input type="text" name="osc_command" value="">
              <br><br>
              <input type="submit" value="Submit" style="float:initial">
          </form>
      </div>
    </div>
</div>

<!--div style="padding-left:20px">
  <h1>Responsive Header</h1>
  <p>Resize the browser window to see the effect.</p>
  <p>Some content..</p>
</div-->

</body>
</html>